; This command tells Zeus where to put the code it generates. As a szx file... Alter the path to suit your system

 zeusemulate "48K"
 output_szx "spi.szx",32768,START     ; The szx file

; output_bin "c:\spi.bin",$0000,$10000    ; The binary file ; If for some reason you want binary, uncomment this line
 ORG 32768

SCREEN          EQU 16384

SCREEN_ROW      EQU 32
SCREEN_LINE     EQU 192
SCREEN_SIZE     EQU SCREEN_ROW*SCREEN_LINE

ATTRIB          EQU 22528
ATTRIB_ROW      EQU 32
ATTRIB_LINE     EQU 24
ATTRIB_SIZE     EQU ATTRIB_ROW*ATTRIB_LINE

START
 DI                      ; interrupts off
 LD SP,MEMTOP            ; set stack to end

 LD HL,ATTRIB            ; attr start                             ; Clear the attributes
 LD DE,ATTRIB+1          ; sttr start +1
 LD BC,ATTRIB_SIZE-1     ; attr size -1
 LD (HL),7               ; clear first attr to white
 LDIR                    ; copy

 LD A,0         ; bottom three bits of A contain the border color
 OUT (254),A

MAIN_LOOP
 CALL V_BLANK
 CALL COPY_SCREEN
 CALL CLEAR_SCREEN

 CALL MOVE_POINTS

 LD A, (stty)
 LD E,A
 LD A, (sttx)
 LD B,A
 LD HL,SP16160300
 CALL SPRITE1616

 LD E,20
 LD B,100
 LD HL,SP16160300
 CALL SPRITE1616

 LD E,40
 LD B,100
 LD HL,SP16160300
 CALL SPRITE1616

 LD E,60
 LD B,100
 LD HL,SP16160300
 CALL SPRITE1616

 LD E,80
 LD B,100
 LD HL,SP16160300
 CALL SPRITE1616

 LD E,100
 LD B,100
 LD HL,SP16160300
 CALL SPRITE1616

 LD A, (endy)
 LD E,A
 LD A, (endx)
 LD B,A
 LD HL,SP16160300
 CALL SPRITE1616

 CALL KEYBOARD
JP MAIN_LOOP

sttx defb 12
stty defb 12
endx defb 95
endy defb 97
sdx defb 1
sdy defb 1
edx defb 1
edy defb 1

px defb 100
py defb 150

; keys = port bit 0   1   2 3 4
;        fefe     sht z   x c v
;        fdfe     a   s   d f g
;        fbfe     q   w   e r t
;        f7fe     1   2   3 4 5
;        effe     0   9   8 7 6
;        dffe     p   o   1 u y
;        bffe     ent l   k j h
;        7ffe     spc sym m n b

KEYBOARD
 LD BC,$FBFE     ; Load BC with the row port address
 IN A,(C)        ; Read the port into the accumulator
 AND $01         ; q
 JP NZ,Q_KEY_N   ; not pressed
  LD A, (px)
  DEC A
  LD (px), A
Q_KEY_N
 LD BC,$DFFE
 IN A,(C)
 AND $01
 JP NZ,P_KEY_N
  LD A, (px)
  INC A
  LD (px), A
P_KEY_N
  LD BC,$FEFE
 IN A,(C)
 AND $01
 JP NZ,Z_KEY_N
  LD A, (py)
  DEC A
  LD (py), A
Z_KEY_N
 LD BC,$7FFE
 IN A,(C)
 AND $01
 JP NZ,M_KEY_N
  LD A, (py)
  INC A
  LD (py), A
M_KEY_N
 RET

;SPRITE0808
;SPRITE0816
;SPRITE0824
;SPRITE0832

;SPRITE1608
;SPRITE1616
;SPRITE1624
;SPRITE1632

;SPRITE2408
;SPRITE2416
;SPRITE2424
;SPRITE2432

;SPRITE3208
;SPRITE3216
;SPRITE3224
;SPRITE3232

; l=x pos
; e=y pos
; HL = sprite address (needs to be put into SP)

SPR_BYTE MACRO ()
 POP DE    ; T 10 ; GRAPHIC (AND/OR)
 LD A,(HL) ; T 7  ; GET SCREEN BYTE
 AND E     ; T 4  ; AND MASK
 OR D      ; T 4  ; OR SPRITE
 LD (HL),A ; T 7  ; PUT SCREEN BYTE
MEND

SPR_LINE MACRO ()
 LD H, HIGH ScrBufL ; T 7 ; SCREEN V TABLE LO
 LD L,B             ; T 4 ; VPOS
 LD A,(HL)          ; T 7 ; LO BYTE POS
 DEC H              ; T 4 ;
 LD H,(HL)          ; T 7 ; SCREEN V TABLE HI
 ADD A,C            ; T 4 ; LO BYTE POS + HOR BYTE POS
 LD L, A            ; T 4
MEND

SPR_LINE_V2 MACRO ()
 LD H,(BC)
 LD A,(DE)
 INC C
 INC E
 EXX AF,AF'
 ld l,a
 EXX AF,AF'
 ADD A,L                ; LO BYTE POS + HOR BYTE POS
 LD L, A
MEND

SPRITE1616      ; B=ver - C=hor - DE = sprite table ADDRESS
 LD (SPRITE1616_END+1),SP ; store sp

 LD D, HIGH ScrBufSprY  ; NO OF BYTES TO JUMP FORWARD
 LD A,(DE)              ; GET TABLE ADDRESS OFFSET

 ADD A,L
 LD L,A

 LD A,(HL)              ; SPRITE ADDRESS LO
 INC L
 LD H,(HL)              ; SPRITE ADDRESS HI
 LD L,A
 LD SP,HL               ; = SPRITE ADDRESS

 LD H, HIGH ScrBufY     ; HOR BYTES
 LD L,E                 ; HOR
 LD C,(HL)              ; C=HOR BYTE POS

 SPR_LINE() ; V0
 SPR_BYTE() ; H0
 INC L
 SPR_BYTE() : H1
 INC L
 SPR_BYTE() ; H2

 INC B
 SPR_LINE() ; V1
 SPR_BYTE() ; H0
 INC L
 SPR_BYTE() ; H1
 INC L
 SPR_BYTE() ; H2

 INC B
 SPR_LINE() ; 2
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 3
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 4
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 5
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 6
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 7
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 8
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 9
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 10
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 11
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 12
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 13
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 14
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 INC B
 SPR_LINE() ; 15
 SPR_BYTE()
 INC L
 SPR_BYTE()
 INC L
 SPR_BYTE()

 SPRITE1616_END LD SP,$0000
RET

SP16160301
 defb $fe, $00,  $7f, $00,  $ff, $00
 defb $f0, $01,  $0f, $80,  $ff, $00
 defb $e0, $0f,  $07, $f0,  $ff, $00
 defb $c0, $1f,  $03, $f8,  $ff, $00
 defb $80, $3f,  $01, $fc,  $ff, $00
 defb $80, $3f,  $01, $fc,  $ff, $00
 defb $80, $3f,  $01, $fc,  $ff, $00
 defb $00, $7f,  $00, $fe,  $ff, $00
 defb $00, $7f,  $00, $fe,  $ff, $00
 defb $80, $3f,  $01, $fc,  $ff, $00
 defb $80, $3f,  $01, $fc,  $ff, $00
 defb $80, $3f,  $01, $fc,  $ff, $00
 defb $c0, $1f,  $03, $f8,  $ff, $00
 defb $e0, $0f,  $07, $f0,  $ff, $00
 defb $f0, $01,  $0f, $80,  $ff, $00
 defb $fe, $00,  $7f, $00,  $ff, $00

SP16160302
 defb $ff, $00,  $3f, $00,  $ff, $00
 defb $f8, $00,  $07, $c0,  $ff, $00
 defb $f0, $07,  $03, $f8,  $ff, $00
 defb $e0, $0f,  $01, $fc,  $ff, $00
 defb $c0, $1f,  $00, $fe,  $ff, $00
 defb $c0, $1f,  $00, $fe,  $ff, $00
 defb $c0, $1f,  $00, $fe,  $ff, $00
 defb $80, $3f,  $00, $ff,  $7f, $00
 defb $80, $3f,  $00, $ff,  $7f, $00
 defb $c0, $1f,  $00, $fe,  $ff, $00
 defb $c0, $1f,  $00, $fe,  $ff, $00
 defb $c0, $1f,  $00, $fe,  $ff, $00
 defb $e0, $0f,  $01, $fc,  $ff, $00
 defb $f0, $07,  $03, $f8,  $ff, $00
 defb $f8, $00,  $07, $c0,  $ff, $00
 defb $ff, $00,  $3f, $00,  $ff, $00

SP16160303
 defb $ff, $00,  $9f, $00,  $ff, $00
 defb $fc, $00,  $03, $60,  $ff, $00
 defb $f8, $03,  $01, $fc,  $ff, $00
 defb $f0, $07,  $00, $fe,  $ff, $00
 defb $e0, $0f,  $00, $ff,  $7f, $00
 defb $e0, $0f,  $00, $ff,  $7f, $00
 defb $e0, $0f,  $00, $ff,  $7f, $00
 defb $c0, $1f,  $00, $ff,  $3f, $80
 defb $c0, $1f,  $00, $ff,  $3f, $80
 defb $e0, $0f,  $00, $ff,  $7f, $00
 defb $e0, $0f,  $00, $ff,  $7f, $00
 defb $e0, $0f,  $00, $ff,  $7f, $00
 defb $f0, $07,  $00, $fe,  $ff, $00
 defb $f8, $03,  $01, $fc,  $ff, $00
 defb $fc, $00,  $03, $60,  $ff, $00
 defb $ff, $00,  $9f, $00,  $ff, $00

SP16160304
 defb $ff, $00,  $cf, $00,  $ff, $00
 defb $fe, $00,  $01, $30,  $ff, $00
 defb $fc, $01,  $00, $fe,  $ff, $00
 defb $f8, $03,  $00, $ff,  $7f, $00
 defb $f0, $07,  $00, $ff,  $3f, $80
 defb $f0, $07,  $00, $ff,  $3f, $80
 defb $f0, $07,  $00, $ff,  $3f, $80
 defb $e0, $0f,  $00, $ff,  $1f, $c0
 defb $e0, $0f,  $00, $ff,  $1f, $c0
 defb $f0, $07,  $00, $ff,  $3f, $80
 defb $f0, $07,  $00, $ff,  $3f, $80
 defb $f0, $07,  $00, $ff,  $3f, $80
 defb $f8, $03,  $00, $ff,  $7f, $00
 defb $fc, $01,  $00, $fe,  $ff, $00
 defb $fe, $00,  $01, $30,  $ff, $00
 defb $ff, $00,  $cf, $00,  $ff, $00

SP16160305
 defb $ff, $00,  $e7, $00,  $ff, $00
 defb $ff, $00,  $00, $18,  $ff, $00
 defb $fe, $00,  $00, $ff,  $7f, $00
 defb $fc, $01,  $00, $ff,  $3f, $80
 defb $f8, $03,  $00, $ff,  $1f, $c0
 defb $f8, $03,  $00, $ff,  $1f, $c0
 defb $f8, $03,  $00, $ff,  $1f, $c0
 defb $f0, $07,  $00, $ff,  $0f, $e0
 defb $f0, $07,  $00, $ff,  $0f, $e0
 defb $f8, $03,  $00, $ff,  $1f, $c0
 defb $f8, $03,  $00, $ff,  $1f, $c0
 defb $f8, $03,  $00, $ff,  $1f, $c0
 defb $fc, $01,  $00, $ff,  $3f, $80
 defb $fe, $00,  $00, $ff,  $7f, $00
 defb $ff, $00,  $00, $18,  $ff, $00
 defb $ff, $00,  $e7, $00,  $ff, $00

SP16160306
 defb $ff, $00,  $f3, $00,  $ff, $00
 defb $ff, $00,  $80, $0c,  $7f, $00
 defb $ff, $00,  $00, $7f,  $3f, $80
 defb $fe, $00,  $00, $ff,  $1f, $c0
 defb $fc, $01,  $00, $ff,  $0f, $e0
 defb $fc, $01,  $00, $ff,  $0f, $e0
 defb $fc, $01,  $00, $ff,  $0f, $e0
 defb $f8, $03,  $00, $ff,  $07, $f0
 defb $f8, $03,  $00, $ff,  $07, $f0
 defb $fc, $01,  $00, $ff,  $0f, $e0
 defb $fc, $01,  $00, $ff,  $0f, $e0
 defb $fc, $01,  $00, $ff,  $0f, $e0
 defb $fe, $00,  $00, $ff,  $1f, $c0
 defb $ff, $00,  $00, $7f,  $3f, $80
 defb $ff, $00,  $80, $0c,  $7f, $00
 defb $ff, $00,  $f3, $00,  $ff, $00

SP16160307
 defb $ff, $00,  $f9, $00,  $ff, $00
 defb $ff, $00,  $c0, $06,  $3f, $00
 defb $ff, $00,  $80, $3f,  $1f, $c0
 defb $ff, $00,  $00, $7f,  $0f, $e0
 defb $fe, $00,  $00, $ff,  $07, $f0
 defb $fe, $00,  $00, $ff,  $07, $f0
 defb $fe, $00,  $00, $ff,  $07, $f0
 defb $fc, $01,  $00, $ff,  $03, $f8
 defb $fc, $01,  $00, $ff,  $03, $f8
 defb $fe, $00,  $00, $ff,  $07, $f0
 defb $fe, $00,  $00, $ff,  $07, $f0
 defb $fe, $00,  $00, $ff,  $07, $f0
 defb $ff, $00,  $00, $7f,  $0f, $e0
 defb $ff, $00,  $80, $3f,  $1f, $c0
 defb $ff, $00,  $c0, $06,  $3f, $00
 defb $ff, $00,  $f9, $00,  $ff, $00

SP16160308
 defb $ff, $00,  $fc, $00,  $ff, $00
 defb $ff, $00,  $e0, $03,  $1f, $00
 defb $ff, $00,  $c0, $1f,  $0f, $e0
 defb $ff, $00,  $80, $3f,  $07, $f0
 defb $ff, $00,  $00, $7f,  $03, $f8
 defb $ff, $00,  $00, $7f,  $03, $f8
 defb $ff, $00,  $00, $7f,  $03, $f8
 defb $fe, $00,  $00, $ff,  $01, $fc
 defb $fe, $00,  $00, $ff,  $01, $fc
 defb $ff, $00,  $00, $7f,  $03, $f8
 defb $ff, $00,  $00, $7f,  $03, $f8
 defb $ff, $00,  $00, $7f,  $03, $f8
 defb $ff, $00,  $80, $3f,  $07, $f0
 defb $ff, $00,  $c0, $1f,  $0f, $e0
 defb $ff, $00,  $e0, $03,  $1f, $00
 defb $ff, $00,  $fc, $00,  $ff, $00

MOVE_POINTS
 LD a, (sttx)
       ld b, a
       LD a, (sdx)
        ld c, a
        LD H, 0
        LD L, 191
        call EDGE
        ld a, b
        ld (sttx), a
        ld a, c
        ld (sdx), a

        LD a, (stty)
        ld b, a
        LD a, (sdy)
        ld c, a
        LD H, 0
        LD L, 255
        call EDGE
        ld a, b
        ld (stty), a
        ld a, c
        ld (sdy), a

        LD a, (endx)
       ld b, a
       LD A, (edx)
        ld c, a
       LD H, 0
       LD L, 191
       call EDGE
        ld a, b
       ld (endx), a
        ld a, c
       ld (edx), a

       LD a, (endy)
       ld b, a
       LD a, (edy)
       ld c, a
       LD H, 0
       LD L, 255
       call EDGE
        ld a, b
       ld (endy), a
        ld a, c
       ld (edy), a
ret

; BC pos dir
; HL limits
EDGE
 LD A,   b
     ADD     a, c
     cp      h
     jp z, REVERSE
     cp l
     jp z, REVERSE
     LD b, a
RET

REVERSE
 LD b, a
        LD a, c
        NEG
        LD c, a
RET

V_BLANK
 LD A,9          ; INK 1; PAPER 1; BRIGHT 0; FLASH 0
 LD ($5ae0), A
 LD ($5ae1), A
FL_BUS
 LD DE,$940       ; attr into D, MSB of port addr into E
FB_LP
  INC HL          ; padding instruction
  LD A,E          ; MSB of port addr into A
  IN A,($ff)      ; read port 0x40FF into A
  CP D            ; is it D (i.e. INK 1, PAPER 1, BRIGHT 0; FLASH 0)?
  JP NZ,FB_LP     ; no? keep trying
RET

CPYLINE MACRO (START_ADDR, END_ADDR)
 LD SP,START_ADDR
 POP AF
 POP BC
 POP DE
 POP HL
 POP IX
 EXX
 POP BC
 POP DE
 POP HL
 LD SP,END_ADDR+16
 PUSH HL
 PUSH DE
 PUSH BC
 EXX
 PUSH IX
 PUSH HL
 PUSH DE
 PUSH BC
 PUSH AF

 LD SP,START_ADDR+16
 POP AF
 POP BC
 POP DE
 POP HL
 POP IX
 EXX
 POP BC
 POP DE
 POP HL
 LD SP,END_ADDR+32
 PUSH HL
 PUSH DE
 PUSH BC
 EXX
 PUSH IX
 PUSH HL
 PUSH DE
 PUSH BC
 PUSH AF
MEND

COPY_SCREEN
 LD (COPY_SCREEN_END+1),SP ; This is some self-modifying code; stores the stack pointer in an LD SP,nn instruction at the end
CPYLINE (SCRBUFFER+(0*32), SCREEN+(0*32))
CPYLINE (SCRBUFFER+(1*32), SCREEN+(1*32))
CPYLINE (SCRBUFFER+(2*32), SCREEN+(2*32))
CPYLINE (SCRBUFFER+(3*32), SCREEN+(3*32))
CPYLINE (SCRBUFFER+(4*32), SCREEN+(4*32))
CPYLINE (SCRBUFFER+(5*32), SCREEN+(5*32))
CPYLINE (SCRBUFFER+(6*32), SCREEN+(6*32))
CPYLINE (SCRBUFFER+(7*32), SCREEN+(7*32))
CPYLINE (SCRBUFFER+(8*32), SCREEN+(8*32))
CPYLINE (SCRBUFFER+(9*32), SCREEN+(9*32))
CPYLINE (SCRBUFFER+(10*32), SCREEN+(10*32))
CPYLINE (SCRBUFFER+(11*32), SCREEN+(11*32))
CPYLINE (SCRBUFFER+(12*32), SCREEN+(12*32))
CPYLINE (SCRBUFFER+(13*32), SCREEN+(13*32))
CPYLINE (SCRBUFFER+(14*32), SCREEN+(14*32))
CPYLINE (SCRBUFFER+(15*32), SCREEN+(15*32))
CPYLINE (SCRBUFFER+(16*32), SCREEN+(16*32))
CPYLINE (SCRBUFFER+(17*32), SCREEN+(17*32))
CPYLINE (SCRBUFFER+(18*32), SCREEN+(18*32))
CPYLINE (SCRBUFFER+(19*32), SCREEN+(19*32))
CPYLINE (SCRBUFFER+(20*32), SCREEN+(20*32))
CPYLINE (SCRBUFFER+(21*32), SCREEN+(21*32))
CPYLINE (SCRBUFFER+(22*32), SCREEN+(22*32))
CPYLINE (SCRBUFFER+(23*32), SCREEN+(23*32))
CPYLINE (SCRBUFFER+(24*32), SCREEN+(24*32))
CPYLINE (SCRBUFFER+(25*32), SCREEN+(25*32))
CPYLINE (SCRBUFFER+(26*32), SCREEN+(26*32))
CPYLINE (SCRBUFFER+(27*32), SCREEN+(27*32))
CPYLINE (SCRBUFFER+(28*32), SCREEN+(28*32))
CPYLINE (SCRBUFFER+(29*32), SCREEN+(29*32))
CPYLINE (SCRBUFFER+(30*32), SCREEN+(30*32))
CPYLINE (SCRBUFFER+(31*32), SCREEN+(31*32))
CPYLINE (SCRBUFFER+(32*32), SCREEN+(32*32))
CPYLINE (SCRBUFFER+(33*32), SCREEN+(33*32))
CPYLINE (SCRBUFFER+(34*32), SCREEN+(34*32))
CPYLINE (SCRBUFFER+(35*32), SCREEN+(35*32))
CPYLINE (SCRBUFFER+(36*32), SCREEN+(36*32))
CPYLINE (SCRBUFFER+(37*32), SCREEN+(37*32))
CPYLINE (SCRBUFFER+(38*32), SCREEN+(38*32))
CPYLINE (SCRBUFFER+(39*32), SCREEN+(39*32))
CPYLINE (SCRBUFFER+(40*32), SCREEN+(40*32))
CPYLINE (SCRBUFFER+(41*32), SCREEN+(41*32))
CPYLINE (SCRBUFFER+(42*32), SCREEN+(42*32))
CPYLINE (SCRBUFFER+(43*32), SCREEN+(43*32))
CPYLINE (SCRBUFFER+(44*32), SCREEN+(44*32))
CPYLINE (SCRBUFFER+(45*32), SCREEN+(45*32))
CPYLINE (SCRBUFFER+(46*32), SCREEN+(46*32))
CPYLINE (SCRBUFFER+(47*32), SCREEN+(47*32))
CPYLINE (SCRBUFFER+(48*32), SCREEN+(48*32))
CPYLINE (SCRBUFFER+(49*32), SCREEN+(49*32))
CPYLINE (SCRBUFFER+(50*32), SCREEN+(50*32))
CPYLINE (SCRBUFFER+(51*32), SCREEN+(51*32))
CPYLINE (SCRBUFFER+(52*32), SCREEN+(52*32))
CPYLINE (SCRBUFFER+(53*32), SCREEN+(53*32))
CPYLINE (SCRBUFFER+(54*32), SCREEN+(54*32))
CPYLINE (SCRBUFFER+(55*32), SCREEN+(55*32))
CPYLINE (SCRBUFFER+(56*32), SCREEN+(56*32))
CPYLINE (SCRBUFFER+(57*32), SCREEN+(57*32))
CPYLINE (SCRBUFFER+(58*32), SCREEN+(58*32))
CPYLINE (SCRBUFFER+(59*32), SCREEN+(59*32))
CPYLINE (SCRBUFFER+(60*32), SCREEN+(60*32))
CPYLINE (SCRBUFFER+(61*32), SCREEN+(61*32))
CPYLINE (SCRBUFFER+(62*32), SCREEN+(62*32))
CPYLINE (SCRBUFFER+(63*32), SCREEN+(63*32))
CPYLINE (SCRBUFFER+(64*32), SCREEN+(64*32))
CPYLINE (SCRBUFFER+(65*32), SCREEN+(65*32))
CPYLINE (SCRBUFFER+(66*32), SCREEN+(66*32))
CPYLINE (SCRBUFFER+(67*32), SCREEN+(67*32))
CPYLINE (SCRBUFFER+(68*32), SCREEN+(68*32))
CPYLINE (SCRBUFFER+(69*32), SCREEN+(69*32))
CPYLINE (SCRBUFFER+(70*32), SCREEN+(70*32))
CPYLINE (SCRBUFFER+(71*32), SCREEN+(71*32))
CPYLINE (SCRBUFFER+(72*32), SCREEN+(72*32))
CPYLINE (SCRBUFFER+(73*32), SCREEN+(73*32))
CPYLINE (SCRBUFFER+(74*32), SCREEN+(74*32))
CPYLINE (SCRBUFFER+(75*32), SCREEN+(75*32))
CPYLINE (SCRBUFFER+(76*32), SCREEN+(76*32))
CPYLINE (SCRBUFFER+(77*32), SCREEN+(77*32))
CPYLINE (SCRBUFFER+(78*32), SCREEN+(78*32))
CPYLINE (SCRBUFFER+(79*32), SCREEN+(79*32))
CPYLINE (SCRBUFFER+(80*32), SCREEN+(80*32))
CPYLINE (SCRBUFFER+(81*32), SCREEN+(81*32))
CPYLINE (SCRBUFFER+(82*32), SCREEN+(82*32))
CPYLINE (SCRBUFFER+(83*32), SCREEN+(83*32))
CPYLINE (SCRBUFFER+(84*32), SCREEN+(84*32))
CPYLINE (SCRBUFFER+(85*32), SCREEN+(85*32))
CPYLINE (SCRBUFFER+(86*32), SCREEN+(86*32))
CPYLINE (SCRBUFFER+(87*32), SCREEN+(87*32))
CPYLINE (SCRBUFFER+(88*32), SCREEN+(88*32))
CPYLINE (SCRBUFFER+(89*32), SCREEN+(89*32))
CPYLINE (SCRBUFFER+(90*32), SCREEN+(90*32))
CPYLINE (SCRBUFFER+(91*32), SCREEN+(91*32))
CPYLINE (SCRBUFFER+(92*32), SCREEN+(92*32))
CPYLINE (SCRBUFFER+(93*32), SCREEN+(93*32))
CPYLINE (SCRBUFFER+(94*32), SCREEN+(94*32))
CPYLINE (SCRBUFFER+(95*32), SCREEN+(95*32))
CPYLINE (SCRBUFFER+(96*32), SCREEN+(96*32))
CPYLINE (SCRBUFFER+(97*32), SCREEN+(97*32))
CPYLINE (SCRBUFFER+(98*32), SCREEN+(98*32))
CPYLINE (SCRBUFFER+(99*32), SCREEN+(99*32))

CPYLINE (SCRBUFFER+(100*32), SCREEN+(100*32))
CPYLINE (SCRBUFFER+(101*32), SCREEN+(101*32))
CPYLINE (SCRBUFFER+(102*32), SCREEN+(102*32))
CPYLINE (SCRBUFFER+(103*32), SCREEN+(103*32))
CPYLINE (SCRBUFFER+(104*32), SCREEN+(104*32))
CPYLINE (SCRBUFFER+(105*32), SCREEN+(105*32))
CPYLINE (SCRBUFFER+(106*32), SCREEN+(106*32))
CPYLINE (SCRBUFFER+(107*32), SCREEN+(107*32))
CPYLINE (SCRBUFFER+(108*32), SCREEN+(108*32))
CPYLINE (SCRBUFFER+(109*32), SCREEN+(109*32))
CPYLINE (SCRBUFFER+(110*32), SCREEN+(110*32))
CPYLINE (SCRBUFFER+(111*32), SCREEN+(111*32))

CPYLINE (SCRBUFFER+(112*32), SCREEN+(112*32))

CPYLINE (SCRBUFFER+(113*32), SCREEN+(113*32))
CPYLINE (SCRBUFFER+(114*32), SCREEN+(114*32))
CPYLINE (SCRBUFFER+(115*32), SCREEN+(115*32))
CPYLINE (SCRBUFFER+(116*32), SCREEN+(116*32))
CPYLINE (SCRBUFFER+(117*32), SCREEN+(117*32))
CPYLINE (SCRBUFFER+(118*32), SCREEN+(118*32))
CPYLINE (SCRBUFFER+(119*32), SCREEN+(119*32))
CPYLINE (SCRBUFFER+(120*32), SCREEN+(120*32))
CPYLINE (SCRBUFFER+(121*32), SCREEN+(121*32))
CPYLINE (SCRBUFFER+(122*32), SCREEN+(122*32))
CPYLINE (SCRBUFFER+(123*32), SCREEN+(123*32))
CPYLINE (SCRBUFFER+(124*32), SCREEN+(124*32))
CPYLINE (SCRBUFFER+(125*32), SCREEN+(125*32))
CPYLINE (SCRBUFFER+(126*32), SCREEN+(126*32))
CPYLINE (SCRBUFFER+(127*32), SCREEN+(127*32))
CPYLINE (SCRBUFFER+(128*32), SCREEN+(128*32))
CPYLINE (SCRBUFFER+(129*32), SCREEN+(129*32))
CPYLINE (SCRBUFFER+(130*32), SCREEN+(130*32))
CPYLINE (SCRBUFFER+(131*32), SCREEN+(131*32))
CPYLINE (SCRBUFFER+(132*32), SCREEN+(132*32))
CPYLINE (SCRBUFFER+(133*32), SCREEN+(133*32))
CPYLINE (SCRBUFFER+(134*32), SCREEN+(134*32))
CPYLINE (SCRBUFFER+(135*32), SCREEN+(135*32))
CPYLINE (SCRBUFFER+(136*32), SCREEN+(136*32))
CPYLINE (SCRBUFFER+(137*32), SCREEN+(137*32))
CPYLINE (SCRBUFFER+(138*32), SCREEN+(138*32))
CPYLINE (SCRBUFFER+(139*32), SCREEN+(139*32))
CPYLINE (SCRBUFFER+(140*32), SCREEN+(140*32))
CPYLINE (SCRBUFFER+(141*32), SCREEN+(141*32))
CPYLINE (SCRBUFFER+(142*32), SCREEN+(142*32))
CPYLINE (SCRBUFFER+(143*32), SCREEN+(143*32))
CPYLINE (SCRBUFFER+(144*32), SCREEN+(144*32))
CPYLINE (SCRBUFFER+(145*32), SCREEN+(145*32))
CPYLINE (SCRBUFFER+(146*32), SCREEN+(146*32))
CPYLINE (SCRBUFFER+(147*32), SCREEN+(147*32))
CPYLINE (SCRBUFFER+(148*32), SCREEN+(148*32))
CPYLINE (SCRBUFFER+(149*32), SCREEN+(149*32))
CPYLINE (SCRBUFFER+(150*32), SCREEN+(150*32))
CPYLINE (SCRBUFFER+(151*32), SCREEN+(151*32))
CPYLINE (SCRBUFFER+(152*32), SCREEN+(152*32))
CPYLINE (SCRBUFFER+(153*32), SCREEN+(153*32))
CPYLINE (SCRBUFFER+(154*32), SCREEN+(154*32))
CPYLINE (SCRBUFFER+(155*32), SCREEN+(155*32))
CPYLINE (SCRBUFFER+(156*32), SCREEN+(156*32))
CPYLINE (SCRBUFFER+(157*32), SCREEN+(157*32))
CPYLINE (SCRBUFFER+(158*32), SCREEN+(158*32))
CPYLINE (SCRBUFFER+(159*32), SCREEN+(159*32))
CPYLINE (SCRBUFFER+(160*32), SCREEN+(160*32))
CPYLINE (SCRBUFFER+(161*32), SCREEN+(161*32))
CPYLINE (SCRBUFFER+(162*32), SCREEN+(162*32))
CPYLINE (SCRBUFFER+(163*32), SCREEN+(163*32))
CPYLINE (SCRBUFFER+(164*32), SCREEN+(164*32))
CPYLINE (SCRBUFFER+(165*32), SCREEN+(165*32))
CPYLINE (SCRBUFFER+(166*32), SCREEN+(166*32))
CPYLINE (SCRBUFFER+(167*32), SCREEN+(167*32))
CPYLINE (SCRBUFFER+(168*32), SCREEN+(168*32))
CPYLINE (SCRBUFFER+(169*32), SCREEN+(169*32))
CPYLINE (SCRBUFFER+(170*32), SCREEN+(170*32))
CPYLINE (SCRBUFFER+(171*32), SCREEN+(171*32))
CPYLINE (SCRBUFFER+(172*32), SCREEN+(172*32))
CPYLINE (SCRBUFFER+(173*32), SCREEN+(173*32))
CPYLINE (SCRBUFFER+(174*32), SCREEN+(174*32))
CPYLINE (SCRBUFFER+(175*32), SCREEN+(175*32))
CPYLINE (SCRBUFFER+(176*32), SCREEN+(176*32))
CPYLINE (SCRBUFFER+(177*32), SCREEN+(177*32))
CPYLINE (SCRBUFFER+(178*32), SCREEN+(178*32))
CPYLINE (SCRBUFFER+(179*32), SCREEN+(179*32))
CPYLINE (SCRBUFFER+(180*32), SCREEN+(180*32))
CPYLINE (SCRBUFFER+(181*32), SCREEN+(181*32))
CPYLINE (SCRBUFFER+(182*32), SCREEN+(182*32))
CPYLINE (SCRBUFFER+(183*32), SCREEN+(183*32))
CPYLINE (SCRBUFFER+(184*32), SCREEN+(184*32))
CPYLINE (SCRBUFFER+(185*32), SCREEN+(185*32))
CPYLINE (SCRBUFFER+(186*32), SCREEN+(186*32))
CPYLINE (SCRBUFFER+(187*32), SCREEN+(187*32))
CPYLINE (SCRBUFFER+(188*32), SCREEN+(188*32))
CPYLINE (SCRBUFFER+(189*32), SCREEN+(189*32))
CPYLINE (SCRBUFFER+(190*32), SCREEN+(190*32))
CPYLINE (SCRBUFFER+(191*32), SCREEN+(191*32))

COPY_SCREEN_END
 LD SP,$0000
 RET

CLEAR_SCREEN
 LD (CLEAR_SCREEN_END+1),SP     ; Store the stack (self modding code)
 LD SP,SCRBUFFER+SCREEN_SIZE    ; Set stack to end of screen
 LD DE,$A5A5                    ; set DE to 0
 LD B,24                        ; loop 24 times - 96 words * 128 = 6144 bytes

CLEAR_SCREEN_LOOP
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  PUSH DE
  DJNZ CLEAR_SCREEN_LOOP

 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
 PUSH DE
CLEAR_SCREEN_END
 LD SP, $0000         ; Restore the stack
RET

ALIGN $100

SP16160300 DEFW SP16160301,SP16160302,SP16160303,SP16160304,SP16160305,SP16160306,SP16160307,SP16160308

ALIGN $100

ScrBufH
 DEFB (SCRBUFFER+(0*2048)+(0*256)+(0*32))/256
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(0*32))/256
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(0*32))/256
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(0*32))/256
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(0*32))/256
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(0*32))/256
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(0*32))/256
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(0*32))/256

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(1*32))/256
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(1*32))/256
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(1*32))/256
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(1*32))/256
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(1*32))/256
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(1*32))/256
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(1*32))/256
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(1*32))/256

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(2*32))/256
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(2*32))/256
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(2*32))/256
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(2*32))/256
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(2*32))/256
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(2*32))/256
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(2*32))/256
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(2*32))/256

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(3*32))/256
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(3*32))/256
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(3*32))/256
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(3*32))/256
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(3*32))/256
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(3*32))/256
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(3*32))/256
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(3*32))/256

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(4*32))/256
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(4*32))/256
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(4*32))/256
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(4*32))/256
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(4*32))/256
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(4*32))/256
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(4*32))/256
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(4*32))/256

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(5*32))/256
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(5*32))/256
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(5*32))/256
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(5*32))/256
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(5*32))/256
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(5*32))/256
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(5*32))/256
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(5*32))/256

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(6*32))/256
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(6*32))/256
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(6*32))/256
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(6*32))/256
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(6*32))/256
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(6*32))/256
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(6*32))/256
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(6*32))/256

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(7*32))/256
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(7*32))/256
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(7*32))/256
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(7*32))/256
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(7*32))/256
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(7*32))/256
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(7*32))/256
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(7*32))/256

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(0*32))/256
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(0*32))/256
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(0*32))/256
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(0*32))/256
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(0*32))/256
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(0*32))/256
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(0*32))/256
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(0*32))/256

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(1*32))/256
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(1*32))/256
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(1*32))/256
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(1*32))/256
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(1*32))/256
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(1*32))/256
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(1*32))/256
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(1*32))/256

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(2*32))/256
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(2*32))/256
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(2*32))/256
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(2*32))/256
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(2*32))/256
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(2*32))/256
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(2*32))/256
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(2*32))/256

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(3*32))/256
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(3*32))/256
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(3*32))/256
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(3*32))/256
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(3*32))/256
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(3*32))/256
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(3*32))/256
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(3*32))/256

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(4*32))/256
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(4*32))/256
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(4*32))/256
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(4*32))/256
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(4*32))/256
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(4*32))/256
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(4*32))/256
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(4*32))/256

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(5*32))/256
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(5*32))/256
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(5*32))/256
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(5*32))/256
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(5*32))/256
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(5*32))/256
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(5*32))/256
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(5*32))/256

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(6*32))/256
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(6*32))/256
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(6*32))/256
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(6*32))/256
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(6*32))/256
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(6*32))/256
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(6*32))/256
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(6*32))/256

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(7*32))/256
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(7*32))/256
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(7*32))/256
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(7*32))/256
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(7*32))/256
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(7*32))/256
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(7*32))/256
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(7*32))/256

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(0*32))/256
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(0*32))/256
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(0*32))/256
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(0*32))/256
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(0*32))/256
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(0*32))/256
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(0*32))/256
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(0*32))/256

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(1*32))/256
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(1*32))/256
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(1*32))/256
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(1*32))/256
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(1*32))/256
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(1*32))/256
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(1*32))/256
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(1*32))/256

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(2*32))/256
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(2*32))/256
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(2*32))/256
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(2*32))/256
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(2*32))/256
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(2*32))/256
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(2*32))/256
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(2*32))/256

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(3*32))/256
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(3*32))/256
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(3*32))/256
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(3*32))/256
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(3*32))/256
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(3*32))/256
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(3*32))/256
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(3*32))/256

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(4*32))/256
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(4*32))/256
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(4*32))/256
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(4*32))/256
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(4*32))/256
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(4*32))/256
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(4*32))/256
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(4*32))/256

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(5*32))/256
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(5*32))/256
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(5*32))/256
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(5*32))/256
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(5*32))/256
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(5*32))/256
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(5*32))/256
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(5*32))/256

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(6*32))/256
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(6*32))/256
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(6*32))/256
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(6*32))/256
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(6*32))/256
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(6*32))/256
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(6*32))/256
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(6*32))/256

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(7*32))/256
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(7*32))/256
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(7*32))/256
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(7*32))/256
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(7*32))/256
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(7*32))/256
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(7*32))/256
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(7*32))/256

ALIGN $100

ScrBufL
 DEFB (SCRBUFFER+(0*2048)+(0*256)+(0*32))&255
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(0*32))&255
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(0*32))&255
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(0*32))&255
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(0*32))&255
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(0*32))&255
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(0*32))&255
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(0*32))&255

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(1*32))&255
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(1*32))&255
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(1*32))&255
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(1*32))&255
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(1*32))&255
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(1*32))&255
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(1*32))&255
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(1*32))&255

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(2*32))&255
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(2*32))&255
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(2*32))&255
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(2*32))&255
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(2*32))&255
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(2*32))&255
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(2*32))&255
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(2*32))&255

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(3*32))&255
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(3*32))&255
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(3*32))&255
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(3*32))&255
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(3*32))&255
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(3*32))&255
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(3*32))&255
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(3*32))&255

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(4*32))&255
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(4*32))&255
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(4*32))&255
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(4*32))&255
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(4*32))&255
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(4*32))&255
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(4*32))&255
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(4*32))&255

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(5*32))&255
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(5*32))&255
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(5*32))&255
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(5*32))&255
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(5*32))&255
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(5*32))&255
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(5*32))&255
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(5*32))&255

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(6*32))&255
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(6*32))&255
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(6*32))&255
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(6*32))&255
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(6*32))&255
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(6*32))&255
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(6*32))&255
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(6*32))&255

 DEFB (SCRBUFFER+(0*2048)+(0*256)+(7*32))&255
 DEFB (SCRBUFFER+(0*2048)+(1*256)+(7*32))&255
 DEFB (SCRBUFFER+(0*2048)+(2*256)+(7*32))&255
 DEFB (SCRBUFFER+(0*2048)+(3*256)+(7*32))&255
 DEFB (SCRBUFFER+(0*2048)+(4*256)+(7*32))&255
 DEFB (SCRBUFFER+(0*2048)+(5*256)+(7*32))&255
 DEFB (SCRBUFFER+(0*2048)+(6*256)+(7*32))&255
 DEFB (SCRBUFFER+(0*2048)+(7*256)+(7*32))&255

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(0*32))&255
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(0*32))&255
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(0*32))&255
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(0*32))&255
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(0*32))&255
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(0*32))&255
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(0*32))&255
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(0*32))&255

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(1*32))&255
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(1*32))&255
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(1*32))&255
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(1*32))&255
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(1*32))&255
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(1*32))&255
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(1*32))&255
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(1*32))&255

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(2*32))&255
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(2*32))&255
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(2*32))&255
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(2*32))&255
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(2*32))&255
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(2*32))&255
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(2*32))&255
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(2*32))&255

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(3*32))&255
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(3*32))&255
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(3*32))&255
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(3*32))&255
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(3*32))&255
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(3*32))&255
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(3*32))&255
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(3*32))&255

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(4*32))&255
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(4*32))&255
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(4*32))&255
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(4*32))&255
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(4*32))&255
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(4*32))&255
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(4*32))&255
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(4*32))&255

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(5*32))&255
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(5*32))&255
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(5*32))&255
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(5*32))&255
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(5*32))&255
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(5*32))&255
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(5*32))&255
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(5*32))&255

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(6*32))&255
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(6*32))&255
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(6*32))&255
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(6*32))&255
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(6*32))&255
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(6*32))&255
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(6*32))&255
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(6*32))&255

 DEFB (SCRBUFFER+(1*2048)+(0*256)+(7*32))&255
 DEFB (SCRBUFFER+(1*2048)+(1*256)+(7*32))&255
 DEFB (SCRBUFFER+(1*2048)+(2*256)+(7*32))&255
 DEFB (SCRBUFFER+(1*2048)+(3*256)+(7*32))&255
 DEFB (SCRBUFFER+(1*2048)+(4*256)+(7*32))&255
 DEFB (SCRBUFFER+(1*2048)+(5*256)+(7*32))&255
 DEFB (SCRBUFFER+(1*2048)+(6*256)+(7*32))&255
 DEFB (SCRBUFFER+(1*2048)+(7*256)+(7*32))&255

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(0*32))&255
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(0*32))&255
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(0*32))&255
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(0*32))&255
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(0*32))&255
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(0*32))&255
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(0*32))&255
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(0*32))&255

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(1*32))&255
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(1*32))&255
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(1*32))&255
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(1*32))&255
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(1*32))&255
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(1*32))&255
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(1*32))&255
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(1*32))&255

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(2*32))&255
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(2*32))&255
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(2*32))&255
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(2*32))&255
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(2*32))&255
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(2*32))&255
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(2*32))&255
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(2*32))&255

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(3*32))&255
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(3*32))&255
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(3*32))&255
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(3*32))&255
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(3*32))&255
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(3*32))&255
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(3*32))&255
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(3*32))&255

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(4*32))&255
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(4*32))&255
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(4*32))&255
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(4*32))&255
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(4*32))&255
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(4*32))&255
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(4*32))&255
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(4*32))&255

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(5*32))&255
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(5*32))&255
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(5*32))&255
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(5*32))&255
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(5*32))&255
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(5*32))&255
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(5*32))&255
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(5*32))&255

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(6*32))&255
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(6*32))&255
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(6*32))&255
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(6*32))&255
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(6*32))&255
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(6*32))&255
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(6*32))&255
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(6*32))&255

 DEFB (SCRBUFFER+(2*2048)+(0*256)+(7*32))&255
 DEFB (SCRBUFFER+(2*2048)+(1*256)+(7*32))&255
 DEFB (SCRBUFFER+(2*2048)+(2*256)+(7*32))&255
 DEFB (SCRBUFFER+(2*2048)+(3*256)+(7*32))&255
 DEFB (SCRBUFFER+(2*2048)+(4*256)+(7*32))&255
 DEFB (SCRBUFFER+(2*2048)+(5*256)+(7*32))&255
 DEFB (SCRBUFFER+(2*2048)+(6*256)+(7*32))&255
 DEFB (SCRBUFFER+(2*2048)+(7*256)+(7*32))&255

ALIGN $100

ScrBufOR
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2,1
 DEFB 128,64,32,16,8,4,2 ;,1

ALIGN $100

ScrBufY
 DEFS 8,0
 DEFS 8,1
 DEFS 8,2
 DEFS 8,3
 DEFS 8,4
 DEFS 8,5
 DEFS 8,6
 DEFS 8,7
 DEFS 8,8
 DEFS 8,9
 DEFS 8,10
 DEFS 8,11
 DEFS 8,12
 DEFS 8,13
 DEFS 8,14
 DEFS 8,15
 DEFS 8,16
 DEFS 8,17
 DEFS 8,18
 DEFS 8,19
 DEFS 8,20
 DEFS 8,21
 DEFS 8,22
 DEFS 8,23
 DEFS 8,24
 DEFS 8,25
 DEFS 8,26
 DEFS 8,27
 DEFS 8,28
 DEFS 8,29
 DEFS 8,30
 DEFS 8,31

ALIGN $100

ScrBufSprY
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14


 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14
 DEFB 0,2,4,6,8,10,12,14

SCRBUFFER
 DEFS SCREEN_SIZE+32, 0

MEMTOP
 DEFW  0

; Stop planting code after this. (When generating a tape file we save bytes below here).

; AppLast                           EQU *                                    ; The last used byte's address.

; Setup the emulation registers, so Zeus can emulate this code correctly.
Zeus_PC EQU START  ; Tell the emulator where to start.
Zeus_SP EQU MEMTOP ; Tell the emulator where to put the stack.


;Value = 0                       ; Set up a variable
;        repeat                  ; Loop
;          db Value              ; Plant the current value
;          Value = Value + 1     ; Increment it
;        until Value > $100      ; Go back until we've done enough

